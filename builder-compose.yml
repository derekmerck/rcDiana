# Multi-architecture builder for rcdiana:conda and rcdiana:orthanc

# set your env: $ export RCD_ARCH=amd64 / armv7hf / aarch64 <- untested
version: '2.2'

services:
  base:
    build:
      context: ./base
      dockerfile: ${RCD_ARCH}/Dockerfile
      args:
        - RCD_ARCH  # Pass env into Dockerfile for substition
    image: rcdiana:${RCD_ARCH}_base
#    privileged: True
    command: "/bin/bash"  # Exit immediately

  # Can skip ssh in final build if useful by depending conda and orthanc directly on base
  sshd:
    build:
      context: ./sshd
      args:
        - RCD_ARCH  # Pass env into Dockerfile for substition
    image: rcdiana:${RCD_ARCH}_sshd
    depends_on:
      - base
#    privileged: True
    command: "/bin/bash"  # Exit immediately

  # conda doesn't work properly on aarch64, some packages missing
  conda:
    build:
      context: ./conda
      args:
        - RCD_ARCH  # Pass env into Dockerfile for substition
    image: rcdiana:${RCD_ARCH}_conda
    depends_on:
      - sshd
    init: true
    restart: always
    privileged: true
    ports:
      - "322:22"

  keras:
    build:
      context: ./keras
      args:
        - RCD_ARCH  # Pass env into Dockerfile for substition
    image: rcdiana:${RCD_ARCH}_keras
    depends_on:
      - conda
    init: true
    restart: always
    privileged: true
    ports:
      - "522:22"

  orthanc:
    build:
      context: ./orthanc
      args:
        - RCD_ARCH  # Pass env into Dockerfile for substition
    image: rcdiana:${RCD_ARCH}_orthanc
    depends_on:
      - sshd
    init: true
    restart: always
    privileged: True
    ports:
      - "4080:8042"
      - "4242:4242"
      - "422:22"


# Building opencv from scratch times out on travis, better to use menlo
#  opencv:
#    build:
#      context: ./opencv
#      args:
#        - RCD_ARCH
#    image: rcdiana:${RCD_ARCH}_opencv
##    depends_on:
##      - conda    init: true
#    restart: always
#    privileged: true

#   volumes:
#     - 'diana-data:/var/lib/orthanc/db'

